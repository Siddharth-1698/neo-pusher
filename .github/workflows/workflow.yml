name: Create Release and Publish Package

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  actions: write
  packages: write
  pull-requests: write

jobs:
  release-and-publish:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine python-semantic-release setuptools-scm

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Generate new version
      id: new_version
      run: |
        version=$(python -c "from setuptools_scm import get_version; print(get_version())")
        new_version=$(echo $version | sed 's/\(.*\)+g\(.*\)/\1.dev\2/')
        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: Print new version
      run: echo "New version: ${{ env.new_version }}"

    - name: Run semantic-release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Using version ${{ env.new_version }}"
        semantic-release publish

    - name: Build package
      run: python -m build

    - name: Publish package to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore(release): prepare release'
        title: 'chore(release): prepare release'
        body: 'This PR is auto-generated to merge the release changes back to the master branch.'
        branch: release-${{ github.sha }}
        base: master
