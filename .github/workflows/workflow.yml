name: CI/CD Workflow

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  actions: write
  packages: write

jobs:
  push-to-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configure Git user
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

    - name: Push to release branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git checkout -b release || git checkout release
        git push origin release

  release-and-publish:
    needs: push-to-release
    if: always()  # Ensures that the job runs after the push-to-release job
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine setuptools_scm python-semantic-release

    - name: Clean up previous builds
      run: |
        rm -rf dist/ build/ *.egg-info

    - name: Run python-semantic-release
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        semantic-release publish

    - name: Build package
      run: |
        python -m build

    - name: Publish package to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
