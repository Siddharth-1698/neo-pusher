name: Automated Release Workflow

on:
  push:
    branches:
      - main
      - release/**

permissions:
  contents: write
  pull-requests: write

jobs:
  create-release-branch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install python-semantic-release

    - name: Determine next version
      id: next_version
      run: |
        NEXT_VERSION=$(semantic-release version --dry-run | grep -oP "(?<=version: )[^\s]+")
        echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
        echo "Next version: $NEXT_VERSION"

    - name: Create and push release branch
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git checkout -b release/$NEXT_VERSION
        git push origin release/$NEXT_VERSION

    - name: Create pull request to main branch
      uses: repo-sync/pull-request@v2
      with:
        source_branch: release/$NEXT_VERSION
        destination_branch: main
        pr_title: "Release $NEXT_VERSION"
        pr_body: "This PR merges the release branch `release/$NEXT_VERSION` back into `main`."
        pr_draft: false
        github_token: ${{ secrets.GITHUB_TOKEN }}

  version-and-tag:
    runs-on: ubuntu-latest
    needs: create-release-branch

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine python-semantic-release

    - name: Run semantic-release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PYPI_USERNAME: __token__
        PYPI_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        git checkout release/${{ needs.create-release-branch.outputs.next_version }}
        semantic-release publish
